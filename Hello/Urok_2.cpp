/*
Variable - это именованная область памяти, содержимое которой может изменяться в процессе выполнения программы.
Прежде чем использовать переменную ее нужно объявить.
Для объявления переменной обязательно нужно указать ее тип и имя следующий образом:
Синтаксис объявления переменной:
type name;
type - тип объявляемой переменной.
Тип определяет 3 вещи:
1. Сколько памяти переменная будет занимать;
2. Какие значения она сможет принять;
3. Какие операции над ней можно выполнять;

	Все типы данных в языке С++ можно разделить на категории:
1. Логические типы: bool (Boolean), занимает 1 байт памяти и принимает одно из двух значений - true или false
	true - 1
	false - 0
На самом деле 0 это false, а true - это всё, что не 0
любая переменная типа bool, 
2. Символьные типы: char (Character - символ), занимает 1 байт памяти и может хранить 1 единственный кодировке ASCII - American Standart Code for Information Interchange
Всего в ASCII 256 символов
1 Byte - 8 бит;
бит - Binary Digit (Двоичная цифра 0 или 1) => Байт - это восьмиразрядное двоичное число.
Переменнная типа "char" может хранить 1 из 256 ASCII-символов.
Кол-во комбинаций всегда вычисляется по основной формуле комбинаторике N=a^n
a - основание системы счисления
n - разрядность число
N - кол-во комбинаций
Используя эту формулу можно
3. Числовые типы: целочисленные, вещественные
Целочисленные предназначены для хранения целых число, вещественные для хранения дробных чисел
В свою очередь целочисленные типы делятся на: 
безнаковые - unsigned (могут хранить только положительные целые числа);
знаковые - signed (могут зранить так положительные, как и отрицательные целые число);
Вещественные бывает только знаков, безнаковых вещественных типов не существует
Целочисленным числам относятся short, long, int, long long
short: 2 Byte, принимает значения в диапозоне:
unsigned short: 0...65535;
signed short: -32768...32767
Беззнаковой переменной все биты являются значущими, т.е. хранят модуль число.
В знаковой же переменной старший бит является знаковым, т.е. содержит знак числа и для хранения модуля числа остается на 1 бит меньше.
unsigned long: 0...4 294 967 295;
			   0...2^32-1;
signed long: -2 147 483 648 ... 2 147 483 648;
			 -2^31 ... 2^31 - 1;
int (Integer - Целое число) - платформерно зависимый тип данных, его размер последовательный диапозон значений зависит от платформ.
Типы и архетектура процессоров операционной системы и 
Visual Studio для Windows int всегда занимает 4 байта, но в других системах не меньше чем short и не больше чем long.
long long занимает 8 байт памяти
unsigned long long: 0 ... 2^64 - 1;
signed long long: -2^63 ... 2^63 - 1;
объем занимаемой памяти любой переменной или типы памяти всегда можно узнать при помощи оператора sizeof() - возращает размерв в байтах переменной, константы или типа данных.
Диапозон прини всегда можно узнать при помощи макроопредлений Visual Studio
Для short это SHRT_MIN, SHRT_MAX и USHRT_MAX 
Для long это LONG_MIN, LONG_MAX и ULONG_MAX
Для int это INT_MIN, INT_MAX и UINT_MAX
Для long long это LLONG_MIN, LLONG_MAX и ULLONG_MAX
На языке C++ существуют всего 2 вещественные типы:
float - вещественное число одинарной точности (4 byte) и может хранить 38 знаков после запятой с точностью до 7 знаков.
double - вещественное число двойной точности (8 byte) и может 308 знаков после запятой с точностью до 15 знаков.
Имя переменной.
Перменной нужно имя для того чтобы к ней можно было обращаться.
В процессе компиляции имена переменной преобразуются в адреса оперативной памяти
Индентификаторы составлены по определенным правилам.
Индентификатор (identifier) - это имя.
*/

#include<iostream>
using namespace std;
#define delimiter "\n-------------------------------------------------------\n"
void in()
{	
	setlocale(LC_ALL, "Russian");
	//cout << "DataTypes" << endl;
	//cout << true << endl;
	//cout << false << endl;
	//cout << "Переменная типа 'int' занимает " << sizeof(int) << " байт" << endl;
	//cout << "unsigned int: " << 0 << "..." << UINT_MAX << endl;
	cout << delimiter << endl;
	cout << "float:\n";
	cout << sizeof(float) << endl;
	cout << FLT_MIN << " ... " << FLT_MAX << endl;
	cout << delimiter << endl;
	cout << "double:\n";
	cout << sizeof(double) << endl;
	cout << DBL_MIN << " ... " << DBL_MAX << endl;
	double price;
	cout << "Введите в консоль:\n";
	cin >> price;
	cout << "Вы ввели: " << price << endl;
}
