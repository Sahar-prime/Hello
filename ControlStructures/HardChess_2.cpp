#include <iostream>
using namespace std;

//#define HARDCHESS_2

//#define CHESS_1
//#define CHESS_2

#ifdef HARDCHESS_2
void main() 
{
	setlocale(LC_ALL, "");
	int n;
	cout << "Введите размер доски: "; cin >> n;

#ifdef CHESS_1
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++) 
		{
			for (int k = 0; k < n; k++) 
			{
				for (int l = 0; l < n; l++) 
				{
					cout << (i % 2 == k % 2 ? "* " : "  ");
				}
			}
			cout << endl;
		}
	}
#endif

#ifdef CHESS_2
	for (int i = 0; i < n * n; i++)
	{
		for (int j = 0; j < n * n; j++)
		{
			cout << (i / n % 2 == j / n % 2 ? "* " : "  ");
		}
		cout << endl;
	}
#endif
}
#endif

/*
Versio Control System(VCS)- это программа, которая позволяет работать одновременно с несколькими версиями исходных кодов и переключаться между этими версиями.
Существует несколько версии VCS:
SVN;
Subversionl;
Mercurial;
Git(Наиболее распространное, поскольку позволяет использовать платформу GitHub)

Git и GitHub - это не одно и тоже.
Git - это система контроля версий.
GitHub - это облачное хранилище.

Repository - это хранилище исходных кодов.
Различают локальный и удаленный Repository:
Локальный Repository хранится на ПК программиста.
Удаленный Repository на сервере или на GitHub.

fetch - скачивает изменения с удаленного репозитория на локальный;
pull - скачивает и распаковывает изменения с удаленного репозитория на локальный;
push - отправляет изменнения с локального репозитория на удаленный;

COMMIT - это контрольная точка, которая содержит снимок репозитория в какой-то момент времени.
Из этого снимка можно восстановить любые файлы.
CommitMessage 

Последовательность коммитов называют 'ветками' или Branch
В репозитории может быть сколько угодно веток, каждая из которых может отдельные версии исходных кодов.
 
ПРЕЖДЕ ЧЕМ ПЕРЕКЛЮЧАТЬСЯ МЕЖДУ ВЕТКАМИ ОБЯЗАТЕЛЬНО НУЖНО СДЕЛАТЬ COMMIT


*/
